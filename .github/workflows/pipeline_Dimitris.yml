name: Project Pipeline

on:
  workflow_dispatch:
    inputs:
      log_errors:
        description: 'Log errors if tests fail'
        required: true
        default: 'false'
        type: boolean

permissions:
  id-token: write
  contents: read

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  FREE_CURRENCY_API_KEY: ${{ secrets.FREE_CURRENCY_API_KEY }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        id: run_tests
        run: pytest tests/ > pytest-results.log
        continue-on-error: true

      - name: Upload error logs if tests failed and logging is enabled
        if: ${{ steps.run_tests.outcome == 'failure' && github.event.inputs.log_errors == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: error-log
          path: pytest-results.log

      - name: Fail job if tests failed
        if: ${{ steps.run_tests.outcome == 'failure' }}
        run: exit 1

  build-and-push-to-dockerhub:
    runs-on: ubuntu-latest
    needs: run-tests
    if: ${{ needs.run-tests.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        env:
          FREE_CURRENCY_API_KEY: ${{ secrets.FREE_CURRENCY_API_KEY }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fork_automation_and_devops_project:latest

  run-container:
    runs-on: ubuntu-latest
    needs: build-and-push-to-dockerhub
    steps:
      - name: Run Docker Container
        run: docker run -e FREE_CURRENCY_API_KEY=${{ secrets.FREE_CURRENCY_API_KEY }} -p 5000:5000 dimitris1207/fork_automation_and_devops_project:latest
